#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è
"""

from database.models import (
    init_db, add_user, get_words_by_level, add_word_to_spaced_repetition,
    get_words_for_review, update_spaced_repetition, get_spaced_repetition_stats
)
from datetime import datetime, timedelta

def test_spaced_repetition():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è"""
    print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
    init_db()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    test_user_id = 99999
    add_user(test_user_id, 'A1')
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª–æ–≤
    words = get_words_by_level('A1', 3)
    
    if not words:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return False
    
    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(words)} —Å–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª–æ–≤–∞ –≤ —Å–∏—Å—Ç–µ–º—É –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è
    for word in words:
        add_word_to_spaced_repetition(test_user_id, word['word_id'], word['word'])
        print(f"   –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–ª–æ–≤–æ: {word['word']}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = get_spaced_repetition_stats(test_user_id)
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:")
    print(f"   –í—Å–µ–≥–æ —Å–ª–æ–≤: {stats['total_words']}")
    print(f"   –°–ª–æ–≤ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è: {stats['due_today']}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è
    review_words = get_words_for_review(test_user_id, 5)
    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(review_words)} —Å–ª–æ–≤ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤
    if review_words:
        word = review_words[0]
        print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–ª–æ–≤–æ: {word['word']}")
        print(f"   –¢–µ–∫—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {word['interval_days']} –¥–Ω–µ–π")
        print(f"   Ease factor: {word['ease_factor']}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        update_spaced_repetition(word['id'], True)
        print("   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        updated_stats = get_spaced_repetition_stats(test_user_id)
        print(f"   –ù–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {word['interval_days']} –¥–Ω–µ–π")
        print(f"   –ù–æ–≤—ã–π ease factor: {word['ease_factor']}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        update_spaced_repetition(word['id'], False)
        print("   ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
        
        print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        return True
    else:
        print("‚ùå –ù–µ—Ç —Å–ª–æ–≤ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è")
        return False

def test_interval_calculation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤"""
    print("\nüìà –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
    init_db()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    test_user_id = 88888
    add_user(test_user_id, 'A1')
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–æ
    words = get_words_by_level('A1', 1)
    if not words:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return False
    
    word = words[0]
    add_word_to_spaced_repetition(test_user_id, word['word_id'], word['word'])
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è
    review_words = get_words_for_review(test_user_id, 1)
    if not review_words:
        print("‚ùå –°–ª–æ–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è")
        return False
    
    review_word = review_words[0]
    print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–ª–æ–≤–æ: {review_word['word']}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–æ–≤
    intervals = []
    ease_factors = []
    
    for i in range(5):
        is_correct = i < 3  # –ü–µ—Ä–≤—ã–µ 3 –æ—Ç–≤–µ—Ç–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ, –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ
        update_spaced_repetition(review_word['id'], is_correct)
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
        updated_words = get_words_for_review(test_user_id, 1)
        if updated_words:
            updated_word = updated_words[0]
            intervals.append(updated_word['interval_days'])
            ease_factors.append(updated_word['ease_factor'])
            print(f"   –ü–æ–ø—ã—Ç–∫–∞ {i+1}: {'‚úÖ' if is_correct else '‚ùå'} -> –∏–Ω—Ç–µ—Ä–≤–∞–ª: {updated_word['interval_days']} –¥–Ω., ease: {updated_word['ease_factor']:.2f}")
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è")
    print("=" * 60)
    
    tests = [
        ("–°–∏—Å—Ç–µ–º–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è", test_spaced_repetition),
        ("–†–∞—Å—á–µ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤", test_interval_calculation),
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"\nüîç –¢–µ—Å—Ç: {test_name}")
        if test_func():
            passed += 1
            print(f"‚úÖ {test_name} - –ü–†–û–ô–î–ï–ù")
        else:
            print(f"‚ùå {test_name} - –ü–†–û–í–ê–õ–ï–ù")
    
    print("\n" + "=" * 60)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –ø—Ä–æ–π–¥–µ–Ω—ã!")
        print("\nüìã –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è:")
        print("‚Ä¢ –°–ª–æ–≤–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ —Å–∏—Å—Ç–µ–º—É –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏")
        print("‚Ä¢ –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç—Å—è –ø—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞—Ö")
        print("‚Ä¢ –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã —Å–±—Ä–∞—Å—ã–≤–∞—é—Ç—Å—è –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞—Ö")
        print("‚Ä¢ Ease factor –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –∫ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏")
        print("‚Ä¢ –ö–æ–º–∞–Ω–¥—ã /review –∏ /review_test —Ä–∞–±–æ—Ç–∞—é—Ç")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")

if __name__ == "__main__":
    main() 